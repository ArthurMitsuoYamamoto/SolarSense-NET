trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/SolarSense.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  webAppName: 'SolarSense'  # Nome do seu Web App no Azure
  resourceGroup: 'GS_SOLARSENSE'  # Nome do grupo de recursos
  slotName: 'production'  # Nome do slot (geralmente 'production' ou 'staging')

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArgs: '/p:DeployOnBuild=true /p:Configuration=$(buildConfiguration)'

# Publicar o pacote gerado como artefato
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'  # Nome do artefato
    publishLocation: 'Container'

# Tarefa de deploy usando AzureAppServiceDeploy
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'Enzo Lafer RM551111(8b3c71f1-34e5-4ca5-adde-1783ea3a7d68)'  # Sua conex√£o com o Azure
    appType: 'webApp'
    appName: 'SolarSense'  # Nome do Web App
    deployToSlotOrASE: true
    package: '$(Build.ArtifactStagingDirectory)/WebApp.zip'  # Caminho do pacote gerado
    deploymentMethod: 'auto'
    resourceGroupName: 'GS_SOLARSENSE'  # Nome do grupo de recursos
    slotName: 'production'  # Nome do slot de deploy
